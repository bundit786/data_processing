# Necessary libraries
import pandas as pd
import numpy as np

# Define the threshold for the power difference
THRESHOLD = 20  # Example value, user can adjust as needed

# Step 1: Read in the raw .csv file from PS24
df = pd.read_csv('raw_data.csv')  # Set data path as needed

# Step 2: Filter out only the data from specific active CTs
ct_list = ['CT1', 'CT2', 'CT3', 'CT4', 'CT5', 'CT6', 'CT7', 'CT8', 'CT10', 'CT13', 'CT17']
df_filtered = df[df['CT'].isin(ct_list)]

# Step 3: Check the Voltage (V) column for each CT and filter records where Voltage is between 190 and 250
df_filtered = df_filtered[(df_filtered['Voltage (V)'] >= 190) & (df_filtered['Voltage (V)'] <= 250)]

# Step 4: Handle Q values
# Assuming 'use_absolute_Q' is a boolean variable that determines if we use absolute or signed Q
use_absolute_Q = True  # Set to True for absolute Q, False for signed Q

if use_absolute_Q:
    # Use data from positive Q or negative Q where the values are greater than 0
    df_filtered = df_filtered[(df_filtered['Positive Q'] > 0) or (df_filtered['Negative Q'] > 0)]
else:
    # Use data from positive Q if > 0, else use -1 * Negative Q if Negative Q > 0
    df_filtered['Signed Q'] = np.where(df_filtered['Positive Q'] > 0,
                                       df_filtered['Positive Q'],
                                       np.where(df_filtered['Negative Q'] > 0,
                                                -1 * df_filtered['Negative Q'],
                                                np.nan))  # Use NaN for invalid values
    df_filtered = df_filtered.dropna(subset=['Signed Q'])  # Remove rows with invalid Q

# Step 5: Sum up the power (P) column from each circuit and compare with the aggregate P column
# Group by the 'CT' to calculate total power for each circuit
circuit_power_sum = df_filtered.groupby('CT')['Sum_Power (P)'].sum()

# Assuming there's an 'Aggregate P' column to compare with
# Check for each row if the power difference exceeds the threshold
df_filtered['Power Difference'] = np.abs(df_filtered['Sum_Power (P)'] - df_filtered['Aggregate P'])

# Step 6: Filter out records where the power difference exceeds the threshold
df_final = df_filtered[df_filtered['Power Difference'] <= THRESHOLD]

# Output the processed dataframe
df_final.to_csv('processed_data.csv', index=False)
